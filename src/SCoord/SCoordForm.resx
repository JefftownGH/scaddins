<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.Locked" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j4+Pj4+Pj4+Pj4+Pj4+PZQCPj0BOj4+PaUFEj4E9iI+Pj4+Pj2Q9IylRh4+Pj49lAI+PAAmPj48AAACP
        cAA5j4+Pj49JAAAAAAAAg4+Pj2UAj48AE4+PRwAAAI+PDAB0j4+PgwAAio+PUgA+j4+PZQCPjwATj4IA
        AwYAj49tABePj498MlqPj49zACiPj49lAI+PABOPKgBbDgCPj48tAGKPj4+Pj3deRwAAYY+Pj2UAj48A
        GnUAGY8FAI+Pj4gAAI+Pj3YIAAAAB2CPj4+PZQCPjwAbGAB7jwQAj4+Pj1AAR4+PAQBIan+Pj4+Pj49l
        AI+PAAAAQ4+NBACPj4+PjwUAhI8AG4+PjzkAbo+Pj2UAj48AAAGPj4wCAI+Pj4+PZwA2jxEANk84AACL
        j4+PZQCPjwAAX4+PjAkAj4+Pj4+PJSuPfR8AAAAcco+Pj49lAI+Pj4+Pj4+Pj4+Pj4+Pj4+Pjo+Pj4qG
        iY+Pj4+Pj2UAj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+PZQCPj4+Pj4+Pj4+Pj4+Pj4+Pj4+P
        j4+Pj4+Pj4+PjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>